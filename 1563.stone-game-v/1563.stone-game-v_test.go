package xcode

import "testing"

func Test1(t *testing.T) {
	input := []int{6, 2, 3, 4, 5, 5}
	output := stoneGameV(input)
	if output != 18 {
		t.Fatal(output)
	}
}

func Test2(t *testing.T) {
	input := []int{7, 7, 7, 7, 7, 7, 7}
	output := stoneGameV(input)
	if output != 28 {
		t.Fatal(output)
	}
}

func Test3(t *testing.T) {
	input := []int{4}
	output := stoneGameV(input)
	if output != 0 {
		t.Fatal(output)
	}
}

func Test62(t *testing.T) {
	input := []int{39994, 3, 4, 10000, 10000, 10000, 10000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1000000}
	output := stoneGameV(input)
	if output != 150003 {
		t.Fatal(output)
	}
}

func Test87(t *testing.T) {
	input := []int{9, 8, 2, 4, 6, 3, 5, 1, 7}
	output := stoneGameV(input)
	if output != 34 {
		t.Fatal(output)
	}
}

func Test127(t *testing.T) {
	input := []int{3488, 3730, 6176, 6472, 7201, 8180, 11390, 13799, 15941, 18153, 19247, 21210, 21234, 21549, 21830, 22233, 25652, 25687, 29444, 38931, 46928, 58943, 59338, 59545, 60855, 61548, 66262, 67877, 67991, 70504, 70699, 70759, 72224, 73114, 75436, 78393, 80692, 82190, 87771, 92451, 99725, 100449, 102283, 104478, 106018, 106121, 109594, 109612, 109838, 111468, 112875, 118131, 120584, 121489, 122272, 124258, 124811, 127850, 128611, 131750, 136981, 138890, 139089, 140481, 140696, 145727, 146094, 152535, 153415, 157345, 157442, 159193, 169400, 174451, 179869, 180105, 182549, 189035, 194537, 195631, 199236, 199440, 203642, 207108, 209075, 213779, 218915, 221914, 222246, 222676, 224559, 224857, 229929, 230607, 234007, 237647, 240922, 241376, 243122, 243535, 245307, 245666, 245986, 246152, 247822, 248691, 250059, 253099, 258951, 259004, 259096, 264954, 266265, 273589, 273848, 278447, 288887, 289300, 291057, 292142, 292498, 293961, 294782, 298191, 299762, 300861, 302409, 304268, 305264, 305643, 305765, 307480, 308942, 312593, 314236, 319317, 319687, 320142, 322284, 323266, 324232, 325858, 327954, 330980, 337823, 339433, 341371, 345484, 348915, 355759, 358084, 358545, 358623, 367646, 370654, 372476, 373347, 374420, 375519, 381357, 385268, 385937, 389167, 389190, 394382, 396438, 397277, 400737, 400877, 401660, 402402, 403689, 404610, 405254, 414915, 421015, 422136, 422696, 424384, 425287, 425844, 427005, 431045, 431526, 434163, 437952, 439263, 439860, 445478, 446480, 451535, 451563, 452758, 453343, 455340, 456166, 462327, 462581, 466738, 467054, 468969, 474214, 477313, 478064, 479880, 481115, 482438, 482624, 483522, 491085, 491803, 492190, 493588, 494674, 497467, 502489, 513018, 514759, 521695, 521851, 522512, 525621, 528126, 531158, 531737, 531966, 532227, 533195, 534242, 534578, 535928, 539574, 540501, 541569, 542508, 543654, 554578, 555398, 558121, 558382, 562391, 566191, 568338, 573907, 574124, 577359, 577441, 579173, 579572, 581852, 583043, 584510, 584537, 584922, 586888, 589535, 589957, 593438, 596115, 597345, 597932, 598511, 605801, 612563, 616270, 617893, 618962, 619696, 621243, 621610, 621784, 626001, 628857, 631396, 633321, 635312, 635625, 637778, 638065, 638624, 640512, 642132, 642826, 643818, 644722, 650680, 650968, 652109, 654981, 655219, 655696, 663154, 664049, 666439, 667431, 668632, 669728, 674322, 674413, 674552, 678669, 681603, 681704, 682799, 685403, 686566, 690222, 696033, 696492, 696837, 701653, 706142, 706353, 706515, 707878, 708435, 711283, 712989, 717062, 720404, 723763, 725194, 726934, 733222, 733333, 733637, 733680, 733957, 734108, 737494, 740398, 743898, 744421, 745233, 750195, 754320, 755329, 757352, 758503, 759788, 760231, 762341, 762426, 765026, 769282, 771066, 771895, 776058, 776317, 776827, 783362, 783726, 784846, 784992, 785957, 788918, 790257, 791164, 791168, 792992, 794784, 797367, 800695, 801952, 805102, 808022, 813033, 813884, 816357, 817878, 818379, 823751, 825406, 826523, 829276, 831735, 833693, 834394, 836457, 836663, 837149, 842852, 844631, 847398, 848331, 852091, 853424, 855293, 855469, 859237, 860763, 867226, 867570, 868379, 871051, 871525, 883411, 883683, 885033, 890624, 891579, 892218, 893858, 896374, 899599, 900572, 902008, 903387, 909420, 915280, 916329, 916914, 918029, 925541, 926345, 926425, 930524, 933279, 938355, 940932, 941435, 941586, 946847, 947466, 948146, 950905, 952821, 953211, 955229, 956842, 967130, 967657, 970358, 975362, 975991, 977841, 979375, 979607, 983088, 983569, 983813, 988879, 991299, 993157, 995705}
	output := stoneGameV(input)
	if output != 224201491 {
		t.Fatal(output)
	}
}
